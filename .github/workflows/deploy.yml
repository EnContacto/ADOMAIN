name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push SendMessage Image
        run: |
          docker build -t ztencontacto/test-communication:sendmessage-latest ./sendmessage
          docker push ztencontacto/test-communication:sendmessage-latest

      - name: Build and Push GetMessages Image
        run: |
          docker build -t ztencontacto/test-communication:getmessages-latest ./getmessages
          docker push ztencontacto/test-communication:getmessages-latest

      - name: Build and Push DeleteMessage Image
        run: |
          docker build -t ztencontacto/test-communication:deletemessage-latest ./deletemessage
          docker push ztencontacto/test-communication:deletemessage-latest

  deploy_ec2:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Verify SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo 'SSH Connection Successful'"

      - name: Clone Repository on EC2 (if not exists)
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            if [ ! -d ~/test-communication ]; then
              echo "Cloning repository..."
              git clone https://github.com/tu-usuario/tu-repositorio.git ~/test-communication
            else
              echo "Directory ~/test-communication already exists. Skipping clone."
            fi
          EOF

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "Changing to project directory..."
            cd ~/test-communication || { echo "Directory ~/test-communication not found. Exiting."; exit 1; }

            echo "Stopping existing containers..."
            sudo docker-compose down

            echo "Pulling latest images..."
            sudo docker pull ztencontacto/test-communication:sendmessage-latest
            sudo docker pull ztencontacto/test-communication:getmessages-latest
            sudo docker pull ztencontacto/test-communication:deletemessage-latest

            echo "Setting environment variables..."
            export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
            export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
            export AWS_REGION="us-east-1"

            echo "Restarting services..."
            sudo docker-compose up -d
          EOF
