name: Deploy to EC2 on main push

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ztencontacto/test-communication
  DOCKER_COMPOSE_FILE: docker-compose.yml

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker --version
          docker-compose --version

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: |
          docker-compose -f $DOCKER_COMPOSE_FILE build

      - name: List Docker Images (Debugging Step)
        run: docker images

      - name: Tag Docker images correctly
        run: |
          docker tag test-communication_sendmessage ztencontacto/test-communication:sendmessage-latest
          docker tag test-communication_getmessages ztencontacto/test-communication:getmessages-latest
          docker tag test-communication_deletemessage ztencontacto/test-communication:deletemessage-latest

      - name: Push Docker images
        run: |
          docker push ztencontacto/test-communication:sendmessage-latest
          docker push ztencontacto/test-communication:getmessages-latest
          docker push ztencontacto/test-communication:deletemessage-latest

  deploy-to-ec2:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: SSH into EC2 and Deploy
        run: |
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
          set -e

          if ! command -v docker &> /dev/null; then
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
          fi

          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          sudo docker pull ztencontacto/test-communication:sendmessage-latest
          sudo docker pull ztencontacto/test-communication:getmessages-latest
          sudo docker pull ztencontacto/test-communication:deletemessage-latest

          sudo docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} down

          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          AWS_REGION="us-east-1" \
          DYNAMODB_TABLE="Messages" \
          sudo docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d --force-recreate
          EOF
